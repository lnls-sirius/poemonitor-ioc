PREFIXO:PwrState-Sel (Off/On) (escrita sob demanda)
PREFIXO:PwrState-Sts (Off/On) (leitura uma vez por segundo)
PV  do STATUS                 (status) -> mostrar os 5 estados possiveis

Na inicialização do IOC: ler o estado atual da interface e atribuir ele às duas PVs acima.

====================================================
status possiveis a serem regastados das entradas POE
====================================================
• Searching: The port is trying to detect a PD connection. (PPDS_SEARCHING)
• Delivering: The port is delivering power to a PD.        (PPDS_DELIVERING)
• Disabled: On the indicated port, either PoE support is disabled or PoE power is enabled (PPDS_DISABLED)
but the PoE module does not have enough power available to supply the port's power
needs.
• Fault: The switch detects a problem with the connected PD. (PPDS_FAULT)
• Other Fault: The switch has detected an internal fault that prevents it from supplying (PPDS_OTHERFAULT)
power on that port.
---------------------------------------------------------------------------------------------------
pv -> delivering or not delivering -> basicamente ON ou OFF
pv -> complete status              -> Mostra o estado completo, mais detalhado (explicação do q é o estado inserida na PV?)

verificar se da para pegar stats de 3 portas em 1 segundo -> é possivel, foi realizado um teste para tentar obter 10 amostras de cada
em 1 segundo e demorou 1.127 segundos.

usar pykaspy para criar as PVs -> criar todas as pvs

arquivo com listagem de configuração
de cada dispisitivo -> o IOC deverá ler esse arquivo de configuração e saber através dele quais são todos os
dispositivos que devem ser monitorados, esse arquivo deve conter as seguintes informações de cada dispositivos
    ip do switch , (comunicação com o switch)
    numero da porta,-> (comunicação com o switch)
    niome do dispostiivo -> (prefixo da PV)


Fazer thread para buscar na API o valor e traduzir esse valor para oq mostrar na PV
    -> criar as filas
    -> criar toda a thread scan
        -> criar os eventos para inserir os gets periodicos

-> criar as thread process para cada fila
    ->executar leitura de valores (ok)
    ->executar escrita de valores
        ->Fazer a inserção da request de escrita (mover o cpodigo que esta no
        lugar errado como sinalizado pelos comentarios)
        ->executar o request
fazer pela função write a permissão de escrita na devida pv, e isso faz com que ao invés de alterar naquele momento o valor da pv
ele insira uma requisição de escrita TUPLA -> ("NOME DA REQUISIÇÃO", VALOR) na fila do respectivo switch que dps será processada pela thread process
e ai sim alterado seu valor pelo valor requisitado

testar colocar um alarme nop set param e ver oque da
    -> IMPORTANTE-> VALOR 10 DE ALARM (TIMEOUT) é o comumente usado para qnd a PV está desconectado

definir valores iniciais para PV de seleção(put)
TESTAR ELAS

OQUE ACONTECE SE O SWITCH FOR ESETADO, OS VALORES DAS PVS FICAM INCONSISTENTES?
    -> isso ja foi tratado com a atualização da PV de seleção juntamente com a PV de status em todo processo de scan

inserir valores de alerta para as PVs

Concertar a obtenção da PV seletora, ela é apenas para saber qnd foi escrito ou não. INiciar uma vez no scan e dps não mais

USAR A CLASSE SESSION DA BIBLIOTECA REQUESTS NO LUGAR DA CLASSE CRIADA POR MIM ARUBAREQUESTER (Faz mais sentido)
    ->substituir todos os usos
    ->deletar a classe do código

COISAS PARA DISCUTIR
    -> LIMITE DO TAMANHO DA FILA PODE SER UM PROBLEMA??? -> NÃO ME AGRADA ESSA SOLUÇÃO NEM UM POUCO <- naverdade não faz sentido eu ficar escaneando quando
    o dispositivo está offline, logo faz sentido travar a thread de scan referente ao switch desconectado.
    -> SE ESTIVER DESCONECTADO JOGAR FORA REQUISIÇÕES DE PUT???
    -> POSSO CONTROLAR ATRAVÉS DE OUTRA FILA QUEM ESTÁ CONECTADO E QUEM ESTÁ DESCONECTADO, EVITANDO O PROBLEMA DE RACE CONDITION
    -> AO INVÉS DE GUARDAR O COOKIE E RESETAR SÓ ELE, VER UM COMANDO QUE SEJA POSSÍVEL EXCLUIR TODOS OS DADOS DE SESSÃO, AFINAL SÓ EXISTE UMA CLIENT

colocar o logout no requester
    -> qualquer exeção gerada no meio da conexão , que não seja connection lost , requisitar um logout
    -> em casos de perda de conexão, como tratar o logout???
        ->para a inserção de requisições na fila, limpa as filas?
        -> IDEIA: Configurar o timeout de seção do switch para valores pequenos, considerando q sempre será realizada requisições em curto periodo de temopo
        ele não deve ocorrer durante um funcionamento comum
        ->tratar excessão de timeout de chamada
            -> isso deve ser feito apenas nos envios de put da PV de seleção, pois as outras são lidas periodicamente, caso aconteça o timeout do put
                deve-se inserir um alerta na PV
    -> Fazer o código se recuperar de perdas de conexão

colocarr nome do autor

indicar versão do python usada

CRIAR DINAMICAMENTE AS PVS BASEADAS NO ARQUIVO .CONF e incluir os nomes das variaveis passiveis de serem escritas na função write de maneira dinamica

Coisa para concertar
    ->Setar as varias -SEL apenas no boot do IOC, não fazer mais isso quando recupera CONEXÃO -> ok
    -> parar de fazer reenvio e considerar que quando der 1 timeout, perdeu a conexão -> ok
        ->Sempre que ocorre um timeout é necessário que seja definido os alarmes para as respectivas PVs, já que essa requisição já foi removida
            da fila e não entrara na seção referente ao processamento de requisição desconectada -> ok
            -> isso pois a desconexão pode ocorrer durante um momento que esteja dentro do if(connected == true)
    -> caput -> deve setar o parametro antes mesmo de saber se a request deu certo ou não, em caso de dar errado, sinalizar a PV com alerts -> ok
    -> parar de travar a scan thread qnd perder conexão, deixar ela rodando enquanto as requisições são consumidas e são tratadas de maneira diferente
        por estar DESCONECTADO -> ok

######PROBLEMA, PQ ESTÁ GASTANDO TANTA MEMÓRIA ESSE PROGRAMA????####################
    ->RESOLVIDO -> ERA CAUSADO PELA CHAMADA SimpleServer() DEVIDO A VARIAVEL DE AMBIENTE DO EPICS QUE DEFINE UM TAMANHO BASICO PARA RECEBIMENTO
        DE PVS DO TIPO VETOR


#####PAREI AQUI #######

Tentar reduzir mais o consumo de memória RAM -> no momento de import aparentemente está acontecendo um alto consumo de RAM q dps fica contante

Analisar se é  um problema quando está offline do switch logo no boot a variavel -Raw vir sem valor nenhum apenas com os alarms

-> reduzir o tempo de timeout para um valor próximo ao q uma requisição demora
    ->fazer teste do tempo de resposta do switch, qnd ele esta com conexão ssh aberta ou não,fazer teste considerando o switch que está no sirius,
        pensar tbm sobre o estresse no dispositiovo que está rodando o IOC, de ele demorar para processar a resposta, contudo considerando que
        será um servidor poderoso não é para haver muitos problemas

ANALISAR A LEITURA INICIAL DAS PVs -SEL

setar um timer qnd logar para garantir que o switch vai estar ligado, pq ele consegue conectar antes de disponibilizar energia, podendo prejudicas
os valores salvos???? <- acredito acontecer "raramente" isso

tratar overflow no número de sessões se necessário -> testar isso <- COM O MECANISMO DE RESET GERAL ACHO QUE NÃO PRECISARÁ <- Não encontrei um COMANDO
que faça isso, contudo reduzi para 2 minutos o tempo de logout de sessão ociosa


fazer teste enm uma situação real no Sirius
    -> montar o arquivo de configuração como anotado no caderno sobre os ips e portas
    -> verificar qual dispositivo é o do switch 10.128.101.11
    ->pegar os nomes dos dispositivos? (Não necessário para o primeiro teste mas seria interessante já ir atrás disso)
adicionar PVs no archivers

apos adicionar as PVs no archiver , testar a obtenlção do ultimo estado das PVS -SEL

DESENHAR O DIAGRAMA DA ARQUITETURA E SUBIR NO GIT -> inserir na descrição do código esse link

REALIZAR CONEXÃO PERSISTENTE??

DELETAR TODOS CÓDIGOS DE DEBUGS -> control f DEBUG

inserir no inicio do código breve descrição de seu propósito
    -> inserir link para documento de especificação do padrão de armazenamento de confiogurações do arquivo .config
EXPLICAR EM UM DOCUMENTO O ESQUEMA DO ARQUIVO DE CONFIGURAÇÃO E SUBIR NO GIT -> inserir na descrição do código esse link

tela do css -> baixar ultima versão de produção do ESS
